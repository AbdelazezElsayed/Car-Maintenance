# Use Nginx Alpine for lightweight image with specific version for better security
FROM nginx:1.25-alpine

# Install necessary tools for healthcheck
RUN apk add --no-cache wget

# Create directories with proper structure
RUN mkdir -p /usr/share/nginx/html/styles \
    /usr/share/nginx/html/scripts \
    /usr/share/nginx/html/assets \
    /usr/share/nginx/html/pages \
    /usr/share/nginx/html/pages/maintenance \
    /usr/share/nginx/html/pages/admin \
    /usr/share/nginx/html/pages/chat \
    /usr/share/nginx/html/pages/tire \
    /usr/share/nginx/html/pages/verify-email

# Copy frontend files
COPY frontend/pages/ /usr/share/nginx/html/
COPY frontend/styles/ /usr/share/nginx/html/styles/
COPY frontend/scripts/ /usr/share/nginx/html/scripts/
COPY frontend/assets/ /usr/share/nginx/html/assets/
COPY frontend/nginx.conf /etc/nginx/conf.d/default.conf

# Security: Remove default nginx config and add custom security headers
RUN rm -rf /etc/nginx/conf.d/default.conf.template \
    /etc/nginx/conf.d/examplessl.conf \
    /docker-entrypoint.d/20-envsubst-on-templates.sh \
    /docker-entrypoint.d/30-tune-worker-processes.sh

# Create non-root user with specific UID/GID for better security
RUN addgroup -g 1001 appgroup && \
    adduser -D -u 1000 -G appgroup appuser && \
    chown -R appuser:appgroup /usr/share/nginx/html && \
    # Nginx needs these permissions to run properly
    chown -R appuser:appgroup /var/cache/nginx /var/run /var/log/nginx /etc/nginx/conf.d && \
    chmod -R 755 /usr/share/nginx/html /var/cache/nginx /var/run /var/log/nginx && \
    touch /var/run/nginx.pid && \
    chown appuser:appgroup /var/run/nginx.pid && \
    chmod 644 /var/run/nginx.pid

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 80

# Improved healthcheck with better parameters
HEALTHCHECK --interval=30s --timeout=5s --start-period=15s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost/ || exit 1

# Start Nginx with optimized settings
CMD ["nginx", "-g", "daemon off;"]