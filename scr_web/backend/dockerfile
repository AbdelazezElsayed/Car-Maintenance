# Use a slim Python image based on Alpine for a smaller footprint
FROM python:3.12-alpine

# Set working directory
WORKDIR /app

# Install system dependencies required for your packages
RUN apk add --no-cache --virtual .build-deps \
    gcc \
    musl-dev \
    python3-dev \
    jpeg-dev \
    zlib-dev \
    libpng-dev \
    libffi-dev \
    openssl-dev \
    && apk add --no-cache openblas-dev \
    && pip install --no-cache-dir --upgrade pip \
    && apk del .build-deps

# Copy only requirements first to leverage Docker cache
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy the rest of the application code
COPY . .

# Create a non-root user for security
RUN adduser -D appuser
USER appuser

# Expose the port your app runs on
EXPOSE 8000

# Run the application with Gunicorn and Uvicorn worker
CMD ["gunicorn", "-k", "uvicorn.workers.UvicornWorker", "-b", "0.0.0.0:8000", "main:app"] 